import { RoleEnum } from '../enum/role-enum';
import { VoucherTypeEnum } from '../enum/voucher-type-enum';
import { PaymentType } from 'src/asserts/enum/payment-type.enum';
import { BranchEntity } from 'src/branch/entity/branch.entity';
import { ProductEntity } from 'src/product/entity/product.entity';
import { PaymentStatus } from 'src/product/dto/payment-status.enum';
import { ProductType } from 'src/product/dto/product-type.enum';
import { ClientEntity } from 'src/client/entity/client.entity';
import { VendorEntity } from 'src/vendor/entity/vendor.entity';
import { AssertsEntity } from 'src/asserts/entity/asserts-entity';
import { SubDealerEntity } from 'src/sub-dealer/entity/sub-dealer.entity';
export declare class VoucherEntity {
    id: number;
    name: string;
    quantity: number;
    voucherId: string;
    branchId: BranchEntity;
    role: RoleEnum;
    purpose: string;
    creditAmount: number;
    paymentType: PaymentType;
    paymentTo: string;
    debitAmount: number;
    transferredBy: string;
    bankFrom: string;
    bankTo: string;
    voucherType: VoucherTypeEnum;
    generationDate: Date;
    expireDate: Date;
    shippingAddress: string;
    buildingAddress: string;
    balanceAmount: number;
    total: number;
    hsnCode: string;
    GST: number;
    SCST: number;
    CGST: number;
    amount: number;
    product: ProductEntity[];
    paymentStatus: PaymentStatus;
    productType: ProductType;
    client: ClientEntity[];
    vendor: VendorEntity[];
    initialPayment: number;
    numberOfEmi: number;
    emiNumber: number;
    emiAmount: number;
    ifscCode: string;
    bankAccountNumber: string;
    assert: AssertsEntity[];
    subDealer: SubDealerEntity[];
    companyCode: string;
    unitCode: string;
}
