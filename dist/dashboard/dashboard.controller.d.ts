import { CommonResponse } from "src/models/common-response";
import { AssertDashboardService } from "./assert-dashboard.service";
import { StaffDashboardService } from "./staff-dashboard.service";
import { StaffAttendanceQueryDto } from "src/staff/dto/staff-date.dto";
import { ProductAssignDashboardService } from "./product-assign-dashboard.service";
import { ClientDashboardService } from "./client-dashboards.service";
import { VendorDashboardService } from "./vendor-dashboard.service";
import { SubDealerDashboardService } from "./sub-dealer-dashboard-service";
import { AppointmentDashboardService } from "./appointment-dashboard.service";
import { TicketsDashboardService } from "./tickets-dashboard.service";
import { VoucherDashboardService } from "./voucher-dashboard-service";
import { BranchChartDto } from "src/voucher/dto/balance-chart.dto";
import { VendorDetail } from "src/vendor/dto/vendor-id.deatil";
import { DetailSubDealerDto } from "src/sub-dealer/dto/detail-sub-dealer.dto";
import { ClientDetailDto } from "src/client/dto/detail.client.dto";
import { VoucherIDResDTo } from "src/voucher/dto/voucher-id.res.dto";
import { InvoiceDto } from "src/voucher/dto/invoice.dto";
import { StaffSearchDto } from "src/staff/dto/staff-search.dto";
import { TicketsSearchDto } from "src/tickets/dto/ticket-search.dto";
import { EstimateDashboardService } from "./estimate-dashboard.service";
import { ClientStatusEnum } from "src/client/enum/client-status.enum";
import { PaymentStatus } from "src/product/dto/payment-status.enum";
import { CommonReq } from "src/models/common-req";
export declare class DashboardController {
    private readonly assertService;
    private readonly staffDashboardService;
    private readonly productAssignDashboardService;
    private readonly clientDashboardService;
    private readonly vendorDashboardService;
    private readonly subDealerDashboardService;
    private readonly appointmentDashboardService;
    private readonly ticketsDashboardService;
    private readonly voucherDashboardService;
    private readonly estimateDashboardService;
    constructor(assertService: AssertDashboardService, staffDashboardService: StaffDashboardService, productAssignDashboardService: ProductAssignDashboardService, clientDashboardService: ClientDashboardService, vendorDashboardService: VendorDashboardService, subDealerDashboardService: SubDealerDashboardService, appointmentDashboardService: AppointmentDashboardService, ticketsDashboardService: TicketsDashboardService, voucherDashboardService: VoucherDashboardService, estimateDashboardService: EstimateDashboardService);
    assertCardData(req: CommonReq): Promise<CommonResponse>;
    staffAttendanceDetails(req: StaffAttendanceQueryDto): Promise<CommonResponse>;
    getStaffSearchDetails(req: StaffSearchDto): Promise<CommonResponse>;
    payRoll(req: CommonReq): Promise<CommonResponse>;
    productAssignDetails(req: CommonReq): Promise<CommonResponse>;
    getTicketDetailsAgainstSearch(req: TicketsSearchDto): Promise<CommonResponse>;
    getEstimates(req: {
        fromDate?: string;
        toDate?: string;
        status?: ClientStatusEnum;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getTotalAssignedAndStockLast30Days(req: CommonReq): Promise<CommonResponse>;
    getAssignedQtyLast30Days(req: CommonReq): Promise<CommonResponse>;
    getDetailVendorData(req: VendorDetail): Promise<CommonResponse>;
    getDetailSubDealerData(req: DetailSubDealerDto): Promise<CommonResponse>;
    getClientData(req: CommonReq): Promise<CommonResponse>;
    getDetailClientData(req: ClientDetailDto): Promise<CommonResponse>;
    getVendorData(req: {
        fromDate?: Date;
        toDate?: Date;
        paymentStatus?: string;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getSubDealerData(req: {
        fromDate?: Date;
        toDate?: Date;
        paymentStatus?: PaymentStatus;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getAllAppointmentDetails(req: CommonReq): Promise<CommonResponse>;
    totalTickets(req: CommonReq): Promise<CommonResponse>;
    getDayBookData(req: BranchChartDto): Promise<CommonResponse>;
    getSolidLiquidCash(req: CommonReq): Promise<CommonResponse>;
    getVoucherData(req: InvoiceDto): Promise<CommonResponse>;
    getDetailInVoiceData(req: VoucherIDResDTo): Promise<CommonResponse>;
    getReceiptData(req: {
        voucherId?: string;
        clientName?: string;
        paymentStatus?: PaymentStatus;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getPaymentData(req: {
        fromDate?: Date;
        toDate?: Date;
        paymentStatus?: PaymentStatus;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getPurchaseData(req: CommonReq): Promise<CommonResponse>;
    getLedgerData(req: {
        voucherId?: number;
        branchName?: string;
        paymentStatus?: string;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getAllVouchers(req: {
        voucherId?: number;
        branchName?: string;
        paymentStatus?: string;
        companyCode?: string;
        unitCode?: string;
    }): Promise<CommonResponse>;
    getDetailLedgerData(req: VoucherIDResDTo): Promise<CommonResponse>;
    getMonthWiseBalance(req: BranchChartDto): Promise<CommonResponse>;
    getYearWiseCreditAndDebitPercentages(req: BranchChartDto): Promise<CommonResponse>;
    getPurchaseCount(req: CommonReq): Promise<CommonResponse>;
    getExpenseData(req: CommonReq): Promise<CommonResponse>;
    getLast30DaysCreditAndDebitPercentages(req: CommonReq): Promise<CommonResponse>;
}
